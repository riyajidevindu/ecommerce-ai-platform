version: '3.8'

services:
  traefik:
    image: "traefik:v2.10"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8081:8080" # The Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  auth-service:
    build: ../services/auth-service
    image: riyaji/auth-service:latest
    expose:
      - "8000"
    volumes:
      - ../services/auth-service/app:/app/app
    env_file:
      - ../.env
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-service.rule=PathPrefix(`/api/v1/auth`) || PathPrefix(`/api/v1/users`)"
      - "traefik.http.services.auth-service.loadbalancer.server.port=8000"
    depends_on:
      rabbitmq:
        condition: service_healthy

  stock-service:
    build: ../services/stock-service
    image: riyaji/stock-service:latest
    expose:
      - "8001"
    volumes:
      - ../services/stock-service/app:/app/app
    env_file:
      - ../.env
    environment:
      - DATABASE_URL=postgresql://user:password@postgres-stock:5432/stock_db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.stock-service.rule=PathPrefix(`/api/v1/products`)"
      - "traefik.http.services.stock-service.loadbalancer.server.port=8001"
    depends_on:
      postgres-stock:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  whatsapp-connector-service:
    build: ../services/whatsapp-connector-service
    image: riyaji/whatsapp-connector-service:latest
    expose:
      - "8002"
    volumes:
      - ../services/whatsapp-connector-service/app:/app/app
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - DATABASE_URL=postgresql://user:password@postgres-whatsapp:5432/whatsapp_db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whatsapp-connector-service.rule=PathPrefix(`/api/v1/whatsapp`)"
      - "traefik.http.services.whatsapp-connector-service.loadbalancer.server.port=8002"
    depends_on:
      postgres-whatsapp:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  ai-orchestrator-service:
    build: ../services/ai-orchestrator-service
    image: riyaji/ai-orchestrator-service:latest
    expose:
      - "8003"
    volumes:
      - ../services/ai-orchestrator-service/app:/app/app
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ai-orchestrator-service.rule=PathPrefix(`/api/v1/ai`)"
      - "traefik.http.services.ai-orchestrator-service.loadbalancer.server.port=8003"

  notification-service:
    build: ../services/notification-service
    image: riyaji/notification-service:latest
    expose:
      - "8004"
    volumes:
      - ../services/notification-service/app:/app/app
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.notification-service.rule=PathPrefix(`/api/v1/notifications`)"
      - "traefik.http.services.notification-service.loadbalancer.server.port=8004"

  file-storage-service:
    build: ../services/file-storage-service
    image: riyaji/file-storage-service:latest
    expose:
      - "8005"
    volumes:
      - file_storage_data:/uploads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.file-storage-service.rule=PathPrefix(`/upload`) || PathPrefix(`/images`)"
      - "traefik.http.services.file-storage-service.loadbalancer.server.port=8005"


  postgres:
    image: postgres:13
    env_file:
      - ../.env
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  postgres-stock:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: stock_db
    ports:
      - "5434:5432"
    volumes:
      - postgres_stock_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d stock_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres-whatsapp:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: whatsapp_db
    ports:
      - "5435:5432"
    volumes:
      - postgres_whatsapp_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d whatsapp_db"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  postgres_stock_data:
  postgres_whatsapp_data:
  file_storage_data:
